{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_field_get.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js","node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js","node_modules/@swc/helpers/esm/_class_private_field_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_class_private_field_set.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_create_class.js","src/constants.js","src/scripts/TableColumn.js","src/scripts/TableRow.js","src/utils.js","src/modules/GameController.class.js","src/modules/GameMovement.class.js","src/scripts/toggleGameMode.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac3905202f0710b7$export$71511d61b312f219(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n    return descriptor.value;\n}\n\n\nfunction $753de3cb5925592a$export$71511d61b312f219(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    return privateMap.get(receiver);\n}\n\n\nfunction $2f97c2a4ea6269f4$export$71511d61b312f219(receiver, privateMap) {\n    var descriptor = (0, $753de3cb5925592a$export$71511d61b312f219)(receiver, privateMap, \"get\");\n    return (0, $ac3905202f0710b7$export$71511d61b312f219)(receiver, descriptor);\n}\n\n\nfunction $f86983e96b0c893e$export$71511d61b312f219(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $5d6c3530fa14a187$export$71511d61b312f219(obj, privateMap, value) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateMap);\n    privateMap.set(obj, value);\n}\n\n\nfunction $a91e4d47d6e0e68a$export$71511d61b312f219(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n        descriptor.value = value;\n    }\n}\n\n\n\nfunction $20d5c04b0c6865c9$export$71511d61b312f219(receiver, privateMap, value) {\n    var descriptor = (0, $753de3cb5925592a$export$71511d61b312f219)(receiver, privateMap, \"set\");\n    (0, $a91e4d47d6e0e68a$export$71511d61b312f219)(receiver, descriptor, value);\n    return value;\n}\n\n\nfunction $ac6739cbe5bf1c84$export$71511d61b312f219(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\n\nfunction $ea91727f98d0802f$export$71511d61b312f219(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$71511d61b312f219)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nvar $f91c25f7bc32e504$export$b373aa48c5dd97cc = 2048;\nvar $f91c25f7bc32e504$export$c21b640bfee1f50e = 0;\nvar $f91c25f7bc32e504$export$25512e653c44f0a8 = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $f91c25f7bc32e504$export$6333daccc0bdbd7c = {\n    left: \"left\",\n    right: \"right\",\n    up: \"up\",\n    down: \"down\"\n};\nvar $f91c25f7bc32e504$export$2b91a396ffc4b6e8 = {\n    start: \"start\",\n    restart: \"restart\"\n};\nvar $f91c25f7bc32e504$export$e8c05b13b4dd4b40 = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\nvar $f91c25f7bc32e504$export$7a24a077d7a1fcef = {\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\"\n};\nvar $f91c25f7bc32e504$export$fe523e4c05d25308 = 4;\n\n\nvar $6c7663326f10eb82$var$TableColumn = function(className) {\n    var td = document.createElement(\"td\");\n    td.classList.add(className);\n    return td;\n};\nvar $6c7663326f10eb82$export$2e2bcd8739ae039 = $6c7663326f10eb82$var$TableColumn;\n\n\nvar $8d95bb51a6f5fac9$var$TableRow = function(className) {\n    var tr = document.createElement(\"tr\");\n    tr.classList.add(className);\n    return tr;\n};\nvar $8d95bb51a6f5fac9$export$2e2bcd8739ae039 = $8d95bb51a6f5fac9$var$TableRow;\n\n\n/* eslint-disable no-param-reassign */ \nvar $cadac588900b51a1$export$33e0efaee94597c9 = function(maxNumber) {\n    return Math.floor(Math.random() * maxNumber);\n};\nvar $cadac588900b51a1$export$9a00dee1beb8f576 = function(str) {\n    return str[0].toUpperCase() + str.slice(1);\n};\nvar $cadac588900b51a1$export$36748765b520fa8d = function() {\n    var result = Math.floor(Math.random() * 10) + 1;\n    return result === 1;\n};\nvar $cadac588900b51a1$export$28da6a8e130cf651 = function(board) {\n    return board.every(function(row) {\n        return row.every(function(cell) {\n            return cell !== (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n        });\n    });\n};\nvar $cadac588900b51a1$export$e2f06fda9dc3fd04 = function(board) {\n    return board.some(function(row) {\n        return row.some(function(cell) {\n            return cell === (0, $f91c25f7bc32e504$export$b373aa48c5dd97cc);\n        });\n    });\n};\n\n\n\n\n\nvar $d76aacafaeebffb5$var$GameController = /*#__PURE__*/ function() {\n    \"use strict\";\n    function GameController(game) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, GameController);\n        this.game = game;\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.setController();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(GameController, [\n        {\n            key: \"setController\",\n            value: function setController() {\n                document.addEventListener(\"keydown\", this.handleKeyDown);\n            }\n        },\n        {\n            key: \"removeController\",\n            value: function removeController() {\n                document.removeEventListener(\"keydown\", this.handleKeyDown);\n            }\n        },\n        {\n            key: \"handleKeyDown\",\n            value: function handleKeyDown(e) {\n                if (this.game.getStatus() === (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).idle) return;\n                var oldBoard = JSON.stringify(this.game.getState());\n                this.game.showStatus();\n                switch(e.key){\n                    case (0, $f91c25f7bc32e504$export$7a24a077d7a1fcef).up:\n                        this.game.moveUp();\n                        break;\n                    case (0, $f91c25f7bc32e504$export$7a24a077d7a1fcef).down:\n                        this.game.moveDown();\n                        break;\n                    case (0, $f91c25f7bc32e504$export$7a24a077d7a1fcef).left:\n                        this.game.moveLeft();\n                        break;\n                    case (0, $f91c25f7bc32e504$export$7a24a077d7a1fcef).right:\n                        this.game.moveRight();\n                        break;\n                }\n                var newBoard = JSON.stringify(this.game.getState());\n                if (newBoard !== oldBoard) {\n                    this.game.createNewCell();\n                    this.game.updateBoard(this.game.getState());\n                }\n            }\n        }\n    ]);\n    return GameController;\n}();\nvar $d76aacafaeebffb5$export$2e2bcd8739ae039 = $d76aacafaeebffb5$var$GameController;\n\n\n\n\nvar $23caa0627f2426ab$var$GameMovement = /*#__PURE__*/ function() {\n    \"use strict\";\n    function GameMovement() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, GameMovement);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(GameMovement, [\n        {\n            key: \"isMoveLeft\",\n            value: function isMoveLeft(currentBoard) {\n                for(var grid = currentBoard.length - 1; grid >= 0; grid--)for(var cell = currentBoard.length - 1; cell >= 0; cell--){\n                    if (currentBoard[grid][cell - 1] === currentBoard[grid][cell]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isMoveRight\",\n            value: function isMoveRight(currentBoard) {\n                for(var grid = 0; grid < currentBoard.length; grid++)for(var cell = 0; cell < currentBoard.length; cell++){\n                    if (currentBoard[grid][cell] === currentBoard[grid][cell + 1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isMoveUp\",\n            value: function isMoveUp(currentBoard) {\n                for(var grid = currentBoard.length - 1; grid >= 1; grid--)for(var cell = currentBoard.length - 1; cell >= 0; cell--){\n                    if (currentBoard[grid][cell] === currentBoard[grid - 1][cell]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isMoveDown\",\n            value: function isMoveDown(currentBoard) {\n                for(var grid = 0; grid < currentBoard.length - 1; grid++)for(var cell = 0; cell < currentBoard.length; cell++){\n                    if (currentBoard[grid][cell] === currentBoard[grid + 1][cell]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return GameMovement;\n}();\nvar $23caa0627f2426ab$export$2e2bcd8739ae039 = $23caa0627f2426ab$var$GameMovement;\n\n\n\"use strict\";\nvar /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ $3d28d7f1aac198f5$var$_score = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_board = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_isStartGame = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_controller = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_mergeLeft = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeRight = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeDown = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeUp = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeByCell = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_mergeByGrid = /*#__PURE__*/ new WeakSet(), /**\n   * @returns {number}\n   */ $3d28d7f1aac198f5$var$_getScore = /*#__PURE__*/ new WeakSet(), $3d28d7f1aac198f5$var$_resetScore = /*#__PURE__*/ new WeakSet(), /**\n   * Resets the game.\n   */ $3d28d7f1aac198f5$var$_clearStatus = /*#__PURE__*/ new WeakSet();\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, $f91c25f7bc32e504$export$25512e653c44f0a8);\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeLeft);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeRight);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeDown);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeUp);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByCell);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByGrid);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_resetScore);\n        (0, $ea91727f98d0802f$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_clearStatus);\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, {\n            writable: true,\n            value: 0\n        });\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board, {\n            writable: true,\n            value: []\n        });\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, {\n            writable: true,\n            value: false\n        });\n        (0, $5d6c3530fa14a187$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_controller, {\n            writable: true,\n            value: null\n        });\n        this.tbody = document.querySelector(\"table tbody\");\n        this.htmlScore = document.querySelector(\".game-score\");\n        this.messageLose = document.querySelector(\".message-lose\");\n        this.messageWin = document.querySelector(\".message-win\");\n        this.messageStart = document.querySelector(\".message-start\");\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board, initialState);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, 0);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, false);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_controller, null);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                for(var grid = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length - 1; grid >= 0; grid--)for(var cell = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length - 1; cell >= 0; cell--){\n                    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1] === (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) {\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell];\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n                    }\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByCell, $3d28d7f1aac198f5$var$mergeByCell).call(this, grid, cell, (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).left);\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore, $3d28d7f1aac198f5$var$getScore).call(this);\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                for(var grid = 0; grid < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; grid++)for(var cell = 0; cell < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; cell++){\n                    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1] === (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) {\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell];\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n                    }\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByCell, $3d28d7f1aac198f5$var$mergeByCell).call(this, grid, cell, (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).right);\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore, $3d28d7f1aac198f5$var$getScore).call(this);\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                for(var grid = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length - 1; grid >= 1; grid--)for(var cell = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length - 1; cell >= 0; cell--){\n                    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell] === (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) {\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell];\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n                    }\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByGrid, $3d28d7f1aac198f5$var$mergeByGrid).call(this, grid, cell, (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).up);\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore, $3d28d7f1aac198f5$var$getScore).call(this);\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                for(var grid = 0; grid < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length - 1; grid++)for(var cell = 0; cell < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; cell++){\n                    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell] === (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) {\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell];\n                        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n                    }\n                    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeByGrid, $3d28d7f1aac198f5$var$mergeByGrid).call(this, grid, cell, (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).down);\n                }\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore, $3d28d7f1aac198f5$var$getScore).call(this);\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board);\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                var _ref = new (0, $23caa0627f2426ab$export$2e2bcd8739ae039)(), isMoveLeft = _ref.isMoveLeft, isMoveRight = _ref.isMoveRight, isMoveDown = _ref.isMoveDown, isMoveUp = _ref.isMoveUp;\n                if (!(0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame)) return (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).idle;\n                else if ((0, $cadac588900b51a1$export$28da6a8e130cf651)((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)) && !isMoveLeft((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)) && !isMoveRight((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)) && !isMoveUp((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)) && !isMoveDown((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board))) return (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).lose;\n                else if ((0, $cadac588900b51a1$export$e2f06fda9dc3fd04)((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board))) return (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).win;\n                else return (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).playing;\n            }\n        },\n        {\n            key: \"showStatus\",\n            value: function showStatus() {\n                var gameStatus = this.getStatus();\n                if (gameStatus === (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).win) {\n                    (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, false);\n                    this.messageWin.classList.remove(\"hidden\");\n                }\n                if (gameStatus === (0, $f91c25f7bc32e504$export$e8c05b13b4dd4b40).lose) {\n                    (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, false);\n                    this.messageLose.classList.remove(\"hidden\");\n                }\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, true);\n                this.messageStart.classList.add(\"hidden\");\n                (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_controller, new (0, $d76aacafaeebffb5$export$2e2bcd8739ae039)(this));\n                this.createNewCell();\n                this.createNewCell();\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            key: \"createNewCell\",\n            value: function createNewCell() {\n                var emptyCells = [];\n                for(var grid = 0; grid < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; grid++){\n                    for(var cell = 0; cell < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; cell++)if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] === (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) emptyCells.push({\n                        gridPos: grid,\n                        cellPos: cell\n                    });\n                }\n                var randomIndex = (0, $cadac588900b51a1$export$33e0efaee94597c9)(emptyCells.length);\n                var _emptyCells_randomIndex = emptyCells[randomIndex], gridPos = _emptyCells_randomIndex.gridPos, cellPos = _emptyCells_randomIndex.cellPos;\n                (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[gridPos][cellPos] = (0, $cadac588900b51a1$export$36748765b520fa8d)() ? 4 : 2;\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_isStartGame, false);\n                this.messageStart.classList.remove(\"hidden\");\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_resetScore, $3d28d7f1aac198f5$var$resetScore).call(this);\n                (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_clearStatus, $3d28d7f1aac198f5$var$clearStatus).call(this);\n                (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_controller).removeController();\n                for(var grid = 0; grid < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; grid++)for(var cell = 0; cell < (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board).length; cell++)(0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n                this.updateBoard((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board));\n            }\n        },\n        {\n            key: \"updateBoard\",\n            value: function updateBoard(currentBoard) {\n                this.tbody.innerHTML = \"\";\n                for(var grid = 0; grid < currentBoard.length; grid++){\n                    var tr = (0, $8d95bb51a6f5fac9$export$2e2bcd8739ae039)(\"field-row\");\n                    for(var cell = 0; cell < currentBoard.length; cell++){\n                        var td = (0, $6c7663326f10eb82$export$2e2bcd8739ae039)(\"field-cell\");\n                        var value = currentBoard[grid][cell];\n                        td.classList.add(\"field-cell\");\n                        if (value > (0, $f91c25f7bc32e504$export$c21b640bfee1f50e)) {\n                            td.classList.add(\"field-cell--\".concat(value));\n                            td.textContent = value;\n                        }\n                        tr.append(td);\n                    }\n                    this.tbody.append(tr);\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$mergeLeft(grid, cell) {\n    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1] === (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell]) {\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1] * 2;\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell - 1]);\n    }\n}\nfunction $3d28d7f1aac198f5$var$mergeRight(grid, cell) {\n    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] === (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1]) {\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1] * 2;\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell + 1]);\n    }\n}\nfunction $3d28d7f1aac198f5$var$mergeDown(grid, cell) {\n    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] === (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell]) {\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell] * 2;\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid + 1][cell]);\n    }\n}\nfunction $3d28d7f1aac198f5$var$mergeUp(grid, cell) {\n    if ((0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] === (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell]) {\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell] = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell] * 2;\n        (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid][cell] = (0, $f91c25f7bc32e504$export$c21b640bfee1f50e);\n        (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score) + (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_board)[grid - 1][cell]);\n    }\n}\nfunction $3d28d7f1aac198f5$var$mergeByCell(grid, cell, direction) {\n    if (direction === (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).left) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeLeft, $3d28d7f1aac198f5$var$mergeLeft).call(this, grid, cell);\n    if (direction === (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).right) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeRight, $3d28d7f1aac198f5$var$mergeRight).call(this, grid, cell);\n}\nfunction $3d28d7f1aac198f5$var$mergeByGrid(grid, cell, direction) {\n    if (direction === (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).down) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeDown, $3d28d7f1aac198f5$var$mergeDown).call(this, grid, cell);\n    if (direction === (0, $f91c25f7bc32e504$export$6333daccc0bdbd7c).up) (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_mergeUp, $3d28d7f1aac198f5$var$mergeUp).call(this, grid, cell);\n}\nfunction $3d28d7f1aac198f5$var$getScore() {\n    this.htmlScore.textContent = (0, $2f97c2a4ea6269f4$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score);\n}\nfunction $3d28d7f1aac198f5$var$resetScore() {\n    (0, $20d5c04b0c6865c9$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_score, 0);\n    (0, $ac6739cbe5bf1c84$export$71511d61b312f219)(this, $3d28d7f1aac198f5$var$_getScore, $3d28d7f1aac198f5$var$getScore).call(this);\n}\nfunction $3d28d7f1aac198f5$var$clearStatus() {\n    this.messageLose.classList.add(\"hidden\");\n    this.messageWin.classList.add(\"hidden\");\n}\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = $3d28d7f1aac198f5$var$Game;\n\n\n\n\nvar $52d1009df8ae0950$var$toggleGameMode = function(game, button) {\n    if (button.classList.contains((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).start)) {\n        game.start();\n        button.classList.remove((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).start);\n        button.classList.add((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).restart);\n        button.textContent = (0, $cadac588900b51a1$export$9a00dee1beb8f576)((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).restart);\n    } else {\n        button.classList.add((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).start);\n        button.classList.remove((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).restart);\n        button.textContent = (0, $cadac588900b51a1$export$9a00dee1beb8f576)((0, $f91c25f7bc32e504$export$2b91a396ffc4b6e8).start);\n        game.restart();\n    }\n};\nvar $52d1009df8ae0950$export$2e2bcd8739ae039 = $52d1009df8ae0950$var$toggleGameMode;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\n// Write your code here\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$App = function() {\n    $197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n        (0, $52d1009df8ae0950$export$2e2bcd8739ae039)($197cd56b15c33885$var$game, $197cd56b15c33885$var$button);\n    });\n};\n$197cd56b15c33885$var$App();\n\n})();\n//# sourceMappingURL=index.977a21be.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n\nimport Game from '../modules/Game.class.js';\nimport toggleGameMode from './toggleGameMode.js';\n\nconst game = new Game();\n// Write your code here\nconst button = document.querySelector('button');\n\nconst App = () => {\n  button.addEventListener('click', () => {\n    toggleGameMode(game, button);\n  });\n};\n\nApp();\n","\"use strict\";\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nimport {\n  EMPTY_BOARD,\n  EMPTY_CELL,\n  GAME_STATUSES,\n  MERGE_DIRECTIONS,\n} from \"../constants.js\";\nimport TableColumn from \"../scripts/TableColumn.js\";\nimport TableRow from \"../scripts/TableRow.js\";\nimport {\n  generateRandomIndex,\n  isFilledBoard,\n  isWinGame,\n  rollDie,\n} from \"../utils.js\";\nimport GameController from \"./GameController.class.js\";\nimport GameMovement from \"./GameMovement.class.js\";\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  #score = 0;\n  #board = [];\n  #isStartGame = false;\n  #controller = null;\n\n  constructor(initialState = EMPTY_BOARD) {\n    this.tbody = document.querySelector(\"table tbody\");\n    this.htmlScore = document.querySelector(\".game-score\");\n    this.messageLose = document.querySelector(\".message-lose\");\n    this.messageWin = document.querySelector(\".message-win\");\n    this.messageStart = document.querySelector(\".message-start\");\n    this.#board = initialState;\n    this.#score = 0;\n    this.#isStartGame = false;\n    this.#controller = null;\n  }\n\n  #mergeLeft(grid, cell) {\n    if (this.#board[grid][cell - 1] === this.#board[grid][cell]) {\n      this.#board[grid][cell - 1] = this.#board[grid][cell - 1] * 2;\n      this.#board[grid][cell] = EMPTY_CELL;\n      this.#score += this.#board[grid][cell - 1];\n    }\n  }\n\n  #mergeRight(grid, cell) {\n    if (this.#board[grid][cell] === this.#board[grid][cell + 1]) {\n      this.#board[grid][cell + 1] = this.#board[grid][cell + 1] * 2;\n      this.#board[grid][cell] = EMPTY_CELL;\n      this.#score += this.#board[grid][cell + 1];\n    }\n  }\n\n  #mergeDown(grid, cell) {\n    if (this.#board[grid][cell] === this.#board[grid + 1][cell]) {\n      this.#board[grid + 1][cell] = this.#board[grid + 1][cell] * 2;\n      this.#board[grid][cell] = EMPTY_CELL;\n      this.#score += this.#board[grid + 1][cell];\n    }\n  }\n\n  #mergeUp(grid, cell) {\n    if (this.#board[grid][cell] === this.#board[grid - 1][cell]) {\n      this.#board[grid - 1][cell] = this.#board[grid - 1][cell] * 2;\n      this.#board[grid][cell] = EMPTY_CELL;\n      this.#score += this.#board[grid - 1][cell];\n    }\n  }\n\n  #mergeByCell(grid, cell, direction) {\n    if (direction === MERGE_DIRECTIONS.left) {\n      this.#mergeLeft(grid, cell);\n    }\n\n    if (direction === MERGE_DIRECTIONS.right) {\n      this.#mergeRight(grid, cell);\n    }\n  }\n\n  #mergeByGrid(grid, cell, direction) {\n    if (direction === MERGE_DIRECTIONS.down) {\n      this.#mergeDown(grid, cell);\n    }\n\n    if (direction === MERGE_DIRECTIONS.up) {\n      this.#mergeUp(grid, cell);\n    }\n  }\n\n  moveLeft() {\n    for (let grid = this.#board.length - 1; grid >= 0; grid--) {\n      for (let cell = this.#board.length - 1; cell >= 0; cell--) {\n        if (this.#board[grid][cell - 1] === EMPTY_CELL) {\n          this.#board[grid][cell - 1] = this.#board[grid][cell];\n          this.#board[grid][cell] = EMPTY_CELL;\n        }\n\n        this.#mergeByCell(grid, cell, MERGE_DIRECTIONS.left);\n      }\n    }\n\n    this.#getScore();\n    this.updateBoard(this.#board);\n  }\n\n  moveRight() {\n    for (let grid = 0; grid < this.#board.length; grid++) {\n      for (let cell = 0; cell < this.#board.length; cell++) {\n        if (this.#board[grid][cell + 1] === EMPTY_CELL) {\n          this.#board[grid][cell + 1] = this.#board[grid][cell];\n          this.#board[grid][cell] = EMPTY_CELL;\n        }\n\n        this.#mergeByCell(grid, cell, MERGE_DIRECTIONS.right);\n      }\n    }\n\n    this.#getScore();\n    this.updateBoard(this.#board);\n  }\n\n  moveUp() {\n    for (let grid = this.#board.length - 1; grid >= 1; grid--) {\n      for (let cell = this.#board.length - 1; cell >= 0; cell--) {\n        if (this.#board[grid - 1][cell] === EMPTY_CELL) {\n          this.#board[grid - 1][cell] = this.#board[grid][cell];\n          this.#board[grid][cell] = EMPTY_CELL;\n        }\n\n        this.#mergeByGrid(grid, cell, MERGE_DIRECTIONS.up);\n      }\n    }\n\n    this.#getScore();\n    this.updateBoard(this.#board);\n  }\n\n  moveDown() {\n    for (let grid = 0; grid < this.#board.length - 1; grid++) {\n      for (let cell = 0; cell < this.#board.length; cell++) {\n        if (this.#board[grid + 1][cell] === EMPTY_CELL) {\n          this.#board[grid + 1][cell] = this.#board[grid][cell];\n          this.#board[grid][cell] = EMPTY_CELL;\n        }\n\n        this.#mergeByGrid(grid, cell, MERGE_DIRECTIONS.down);\n      }\n    }\n\n    this.#getScore();\n    this.updateBoard(this.#board);\n  }\n\n  /**\n   * @returns {number}\n   */\n  #getScore() {\n    this.htmlScore.textContent = this.#score;\n  }\n\n  #resetScore() {\n    this.#score = 0;\n    this.#getScore();\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.#board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n\n  getStatus() {\n    const { isMoveLeft, isMoveRight, isMoveDown, isMoveUp } =\n      new GameMovement();\n\n    if (!this.#isStartGame) {\n      return GAME_STATUSES.idle;\n    } else if (\n      isFilledBoard(this.#board) &&\n      !isMoveLeft(this.#board) &&\n      !isMoveRight(this.#board) &&\n      !isMoveUp(this.#board) &&\n      !isMoveDown(this.#board)\n    ) {\n      return GAME_STATUSES.lose;\n    } else if (isWinGame(this.#board)) {\n      return GAME_STATUSES.win;\n    } else {\n      return GAME_STATUSES.playing;\n    }\n  }\n\n  showStatus() {\n    const gameStatus = this.getStatus();\n\n    if (gameStatus === GAME_STATUSES.win) {\n      this.#isStartGame = false;\n      this.messageWin.classList.remove(\"hidden\");\n    }\n\n    if (gameStatus === GAME_STATUSES.lose) {\n      this.#isStartGame = false;\n      this.messageLose.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Starts the game.\n   */\n\n  start() {\n    this.#isStartGame = true;\n    this.messageStart.classList.add(\"hidden\");\n    this.#controller = new GameController(this);\n\n    this.createNewCell();\n    this.createNewCell();\n\n    this.updateBoard(this.#board);\n  }\n\n  createNewCell() {\n    const emptyCells = [];\n\n    for (let grid = 0; grid < this.#board.length; grid++) {\n      for (let cell = 0; cell < this.#board.length; cell++) {\n        if (this.#board[grid][cell] === EMPTY_CELL) {\n          emptyCells.push({\n            gridPos: grid,\n            cellPos: cell,\n          });\n        }\n      }\n    }\n\n    const randomIndex = generateRandomIndex(emptyCells.length);\n    const { gridPos, cellPos } = emptyCells[randomIndex];\n    this.#board[gridPos][cellPos] = rollDie() ? 4 : 2;\n  }\n  /**\n   * Resets the game.\n   */\n  #clearStatus() {\n    this.messageLose.classList.add(\"hidden\");\n    this.messageWin.classList.add(\"hidden\");\n  }\n\n  restart() {\n    this.#isStartGame = false;\n    this.messageStart.classList.remove(\"hidden\");\n\n    this.#resetScore();\n    this.#clearStatus();\n\n    this.#controller.removeController();\n\n    for (let grid = 0; grid < this.#board.length; grid++) {\n      for (let cell = 0; cell < this.#board.length; cell++) {\n        this.#board[grid][cell] = EMPTY_CELL;\n      }\n    }\n\n    this.updateBoard(this.#board);\n  }\n\n  updateBoard(currentBoard) {\n    this.tbody.innerHTML = \"\";\n\n    for (let grid = 0; grid < currentBoard.length; grid++) {\n      const tr = TableRow(\"field-row\");\n\n      for (let cell = 0; cell < currentBoard.length; cell++) {\n        const td = TableColumn(\"field-cell\");\n        const value = currentBoard[grid][cell];\n\n        td.classList.add(\"field-cell\");\n\n        if (value > EMPTY_CELL) {\n          td.classList.add(`field-cell--${value}`);\n          td.textContent = value;\n        }\n\n        tr.append(td);\n      }\n\n      this.tbody.append(tr);\n    }\n  }\n}\n\nexport default Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","import { _ as _class_apply_descriptor_get } from \"./_class_apply_descriptor_get.js\";\nimport { _ as _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nfunction _class_private_field_get(receiver, privateMap) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"get\");\n    return _class_apply_descriptor_get(receiver, descriptor);\n}\nexport { _class_private_field_get as _ };\n","function _class_apply_descriptor_get(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n\n    return descriptor.value;\n}\nexport { _class_apply_descriptor_get as _ };\n","function _class_extract_field_descriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n\n    return privateMap.get(receiver);\n}\nexport { _class_extract_field_descriptor as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n","function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","import { _ as _class_apply_descriptor_set } from \"./_class_apply_descriptor_set.js\";\nimport { _ as _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nfunction _class_private_field_set(receiver, privateMap, value) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"set\");\n    _class_apply_descriptor_set(receiver, descriptor, value);\n    return value;\n}\nexport { _class_private_field_set as _ };\n","function _class_apply_descriptor_set(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nexport { _class_apply_descriptor_set as _ };\n","function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export const TARGET_SCORE = 2048;\nexport const EMPTY_CELL = 0;\n\nexport const EMPTY_BOARD = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nexport const MERGE_DIRECTIONS = {\n  left: 'left',\n  right: 'right',\n  up: 'up',\n  down: 'down',\n};\n\nexport const TYPES_MODE = {\n  start: 'start',\n  restart: 'restart',\n};\n\nexport const GAME_STATUSES = {\n  idle: 'idle',\n  playing: 'playing',\n  win: 'win',\n  lose: 'lose',\n};\n\nexport const DIRECTION_KEYS = {\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n};\n\nexport const GRID_LENGTH = 4;\n","const TableColumn = (className) => {\n  const td = document.createElement('td');\n\n  td.classList.add(className);\n\n  return td;\n};\n\nexport default TableColumn;\n","const TableRow = (className) => {\n  const tr = document.createElement('tr');\n\n  tr.classList.add(className);\n\n  return tr;\n};\n\nexport default TableRow;\n","/* eslint-disable no-param-reassign */\nimport { EMPTY_CELL, TARGET_SCORE } from './constants';\n\nexport const generateRandomIndex = (maxNumber) => {\n  return Math.floor(Math.random() * maxNumber);\n};\n\nexport const capitalize = (str) => {\n  return str[0].toUpperCase() + str.slice(1);\n};\n\nexport const rollDie = () => {\n  const result = Math.floor(Math.random() * 10) + 1;\n\n  return result === 1;\n};\n\nexport const isFilledBoard = (board) => {\n  return board.every((row) => row.every((cell) => cell !== EMPTY_CELL));\n};\n\nexport const isWinGame = (board) => {\n  return board.some((row) => row.some((cell) => cell === TARGET_SCORE));\n};\n","import { DIRECTION_KEYS, GAME_STATUSES } from \"../constants\";\n\nclass GameController {\n  constructor(game) {\n    this.game = game;\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.setController();\n  }\n\n  setController() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  removeController() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown(e) {\n    if (this.game.getStatus() === GAME_STATUSES.idle) {\n      return;\n    }\n\n    const oldBoard = JSON.stringify(this.game.getState());\n\n    this.game.showStatus();\n\n    switch (e.key) {\n      case DIRECTION_KEYS.up:\n        this.game.moveUp();\n        break;\n      case DIRECTION_KEYS.down:\n        this.game.moveDown();\n        break;\n      case DIRECTION_KEYS.left:\n        this.game.moveLeft();\n        break;\n      case DIRECTION_KEYS.right:\n        this.game.moveRight();\n        break;\n    }\n\n    const newBoard = JSON.stringify(this.game.getState());\n\n    if (newBoard !== oldBoard) {\n      this.game.createNewCell();\n      this.game.updateBoard(this.game.getState());\n    }\n  }\n}\n\nexport default GameController;\n","class GameMovement {\n  isMoveLeft(currentBoard) {\n    for (let grid = currentBoard.length - 1; grid >= 0; grid--) {\n      for (let cell = currentBoard.length - 1; cell >= 0; cell--) {\n        if (currentBoard[grid][cell - 1] === currentBoard[grid][cell]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isMoveRight(currentBoard) {\n    for (let grid = 0; grid < currentBoard.length; grid++) {\n      for (let cell = 0; cell < currentBoard.length; cell++) {\n        if (currentBoard[grid][cell] === currentBoard[grid][cell + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isMoveUp(currentBoard) {\n    for (let grid = currentBoard.length - 1; grid >= 1; grid--) {\n      for (let cell = currentBoard.length - 1; cell >= 0; cell--) {\n        if (currentBoard[grid][cell] === currentBoard[grid - 1][cell]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isMoveDown(currentBoard) {\n    for (let grid = 0; grid < currentBoard.length - 1; grid++) {\n      for (let cell = 0; cell < currentBoard.length; cell++) {\n        if (currentBoard[grid][cell] === currentBoard[grid + 1][cell]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nexport default GameMovement;\n","import { TYPES_MODE } from \"../constants\";\nimport { capitalize } from \"../utils\";\n\nconst toggleGameMode = (game, button) => {\n  if (button.classList.contains(TYPES_MODE.start)) {\n    game.start();\n    button.classList.remove(TYPES_MODE.start);\n    button.classList.add(TYPES_MODE.restart);\n    button.textContent = capitalize(TYPES_MODE.restart);\n  } else {\n    button.classList.add(TYPES_MODE.start);\n    button.classList.remove(TYPES_MODE.restart);\n    button.textContent = capitalize(TYPES_MODE.start);\n    game.restart();\n  }\n};\n\nexport default toggleGameMode;\n"],"names":["$8713978b2328d32b$export$71511d61b312f219","instance","Constructor","TypeError","$753de3cb5925592a$export$71511d61b312f219","receiver","privateMap","action","has","get","$2f97c2a4ea6269f4$export$71511d61b312f219","descriptor","call","value","$f86983e96b0c893e$export$71511d61b312f219","obj","privateCollection","$5d6c3530fa14a187$export$71511d61b312f219","set","$20d5c04b0c6865c9$export$71511d61b312f219","writable","$ac6739cbe5bf1c84$export$71511d61b312f219","privateSet","fn","$ea91727f98d0802f$export$71511d61b312f219","add","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","enumerable","configurable","Object","defineProperty","key","$4fc75ccb937ab1df$export$71511d61b312f219","protoProps","staticProps","prototype","$f91c25f7bc32e504$export$25512e653c44f0a8","$f91c25f7bc32e504$export$6333daccc0bdbd7c","left","right","up","down","$f91c25f7bc32e504$export$2b91a396ffc4b6e8","start","restart","$f91c25f7bc32e504$export$e8c05b13b4dd4b40","idle","playing","win","lose","$f91c25f7bc32e504$export$7a24a077d7a1fcef","$6c7663326f10eb82$export$2e2bcd8739ae039","className","td","document","createElement","classList","$8d95bb51a6f5fac9$export$2e2bcd8739ae039","tr","$cadac588900b51a1$export$9a00dee1beb8f576","str","toUpperCase","slice","$d76aacafaeebffb5$var$GameController","GameController","game","handleKeyDown","bind","setController","addEventListener","removeEventListener","e","getStatus","oldBoard","JSON","stringify","getState","showStatus","moveUp","moveDown","moveLeft","moveRight","createNewCell","updateBoard","$23caa0627f2426ab$var$GameMovement","GameMovement","currentBoard","grid","cell","$3d28d7f1aac198f5$var$_score","WeakMap","$3d28d7f1aac198f5$var$_board","$3d28d7f1aac198f5$var$_isStartGame","$3d28d7f1aac198f5$var$_controller","$3d28d7f1aac198f5$var$_mergeLeft","WeakSet","$3d28d7f1aac198f5$var$_mergeRight","$3d28d7f1aac198f5$var$_mergeDown","$3d28d7f1aac198f5$var$_mergeUp","$3d28d7f1aac198f5$var$_mergeByCell","$3d28d7f1aac198f5$var$_mergeByGrid","$3d28d7f1aac198f5$var$_getScore","$3d28d7f1aac198f5$var$_resetScore","$3d28d7f1aac198f5$var$_clearStatus","$3d28d7f1aac198f5$var$Game","Game","initialState","arguments","tbody","querySelector","htmlScore","messageLose","messageWin","messageStart","$3d28d7f1aac198f5$var$mergeByCell","$3d28d7f1aac198f5$var$getScore","$3d28d7f1aac198f5$var$mergeByGrid","_ref","isMoveLeft","isMoveRight","isMoveDown","isMoveUp","board","every","row","some","gameStatus","remove","emptyCells","push","gridPos","cellPos","randomIndex","Math","floor","random","_emptyCells_randomIndex","result","$3d28d7f1aac198f5$var$resetScore","$3d28d7f1aac198f5$var$clearStatus","removeController","innerHTML","concat","textContent","append","$3d28d7f1aac198f5$var$mergeLeft","$3d28d7f1aac198f5$var$mergeRight","$3d28d7f1aac198f5$var$mergeDown","$3d28d7f1aac198f5$var$mergeUp","direction","$52d1009df8ae0950$export$2e2bcd8739ae039","button","contains","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button"],"version":3,"file":"index.977a21be.js.map"}